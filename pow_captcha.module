<?php
define('POW_CAPTCHA_URL', 'http://hashcash.io/');

/**
 * Implementation of hook_menu().
 */
function pow_captcha_menu() {
  $items = array();

  $items['admin/config/people/captcha/pow_captcha'] = array(
    'title' => t('Proof-of-Work CAPTCHA'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pow_captcha_settings_form'),
    'file' => 'pow_captcha.admin.inc',
    'access arguments' => array('administer CAPTCHA settings'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implementation of hook_captcha().
 */
function pow_captcha_captcha($op, $captcha_type='') {
  switch ($op) {

  case 'list':
    return array('Proof-of-Work CAPTCHA');

  case 'generate':
    if ($captcha_type == 'Proof-of-Work CAPTCHA') {

      if (! variable_get('pow_captcha_key')) {
        drupal_set_message(t(
          "Proof-of-Work CAPTCHA is not configured. Please configure it at !link",
            array(
              '!link' => l(t("Setttings Page"), 'admin/config/people/captcha/pow_captcha')
            )
        ), 'warning');
        return;
      }

      pow_captcha_add_css();
      pow_captcha_add_js();

      $captcha = array();
      $captcha['solution'] = 'not used';
      $captcha['form']['pow_captcha'] = array(
        '#type' => 'hidden',
        '#default_value' => 'active',
      );
      $captcha['form']['captcha_response'] = array(
        '#type' => 'hidden',
        '#default_value' => 'active',
      );
      $captcha['form']['pow_captcha_enable_buttons'] = array(
        '#type' => 'checkbox',
        '#title' => t('Unlock submit buttons.'),
      );
      $captcha['form']['progress'] = array(
        '#type' => 'markup',
        '#markup' => '
            <div class="pow-captcha-ie-warning">
                <p>' . t("To submit this form you need to use Internet Explorer v10+ or recent version of Chrome, Firefox or Safari.") . '</p>
            </div>
            <div class="pow-captcha-progress-wrapper">
              <div class="pow-captcha-progress"></div>
              <div class="description">' . t('To submit this form please wait until Proof-of-Work complete.') . '</div>
            </div>
        ',
      );
      $captcha['captcha_validate'] = 'pow_captcha_validate_work';

      return $captcha;
    }
    break;
  }
}

/**
 * Download/Synchronize/Cache worker code file locally.
 *
 * @param $sync_cached_file
 *   Synchronize worker code and update if remote file have changed.
 * @return mixed
 *   The path to the local javascript file on success, boolean FALSE on failure.
 */
function pow_captcha_get_worker_url($sync_cached_file = FALSE) {
  $path = 'public://pow_captcha';
  $location = POW_CAPTCHA_URL . 'js/libs/pow/pow.worker.min.js';
  $file_destination = $path . '/' . basename($location);

  if (!file_exists($file_destination) || $sync_cached_file) {
    // Download the latest worker code.
    $result = drupal_http_request($location);

    if ($result->code == 200) {
      if (file_exists($file_destination)) {
        // Synchronize worker code and and replace local file if outdated.
        $data_hash_local = drupal_hash_base64(file_get_contents($file_destination));
        $data_hash_remote = drupal_hash_base64($result->data);
        // Check that the files directory is writable.
        if ($data_hash_local != $data_hash_remote && file_prepare_directory($path)) {
          // Save updated tracking code file to disk.
          file_unmanaged_save_data($result->data, $file_destination, FILE_EXISTS_REPLACE);
          watchdog('pow_captcha', 'Locally cached worker code file has been updated.', array(), WATCHDOG_INFO);

          // Change query-strings on css/js files to enforce reload for all users.
          _drupal_flush_css_js();
        }
      }
      else {
        // Check that the files directory is writable.
        if (file_prepare_directory($path, FILE_CREATE_DIRECTORY)) {
          // There is no need to flush JS here as core refreshes JS caches
          // automatically, if new files are added.
          file_unmanaged_save_data($result->data, $file_destination, FILE_EXISTS_REPLACE);
          watchdog('pow_captcha', 'Locally cached worker code file has been saved.', array(), WATCHDOG_INFO);

          // Return the local JS file path.
          return file_create_url($file_destination);
        }
      }
    }
  }
  else {
    // Return the local JS file path.
    return file_create_url($file_destination);
  }
}

function pow_captcha_validate_work($solution, $response, $element, $form_state) {
  $key = variable_get('pow_captcha_key');
  $bid = $form_state['input']['form_build_id'];

  $url = POW_CAPTCHA_URL . 'api/work';
  $query = array(
      'apikey' => $key,
      'conditions' => '{"bid": "' . $bid . '"}',
  );

  $result = drupal_http_request( url($url, array('query' => $query)) );

  if ($result->code == 200) {
    $r = drupal_json_decode( $result->data );

    try {
      $totalDone = $r[0]['totalDone'];
    }
    catch (Exception $e) {
        $totalDone = 0;
    }

    if ($totalDone < variable_get('pow_captcha_complexity', 0.0001)) {
      form_set_error('captcha_response', t('You did not wait enough. Please be more patient.'));
      return false;
    }
  }
  else {
    form_set_error('captcha_response', t('Problem with Proof-of-Work. Please contact site administrator if this problem persist.'));
    return false;
  }

  return true;
}

function pow_captcha_add_js() {
  drupal_add_js('misc/progress.js');
  drupal_add_js(POW_CAPTCHA_URL . "js/libs/pow/pow.bundle.min.js", "external");
  drupal_add_js(drupal_get_path('module', 'pow_captcha') .'/pow_captcha.js');
  drupal_add_js(array(
    'pow_captcha' => array(
      'key' => variable_get('pow_captcha_key'),
      'complexity' => variable_get('pow_captcha_complexity', 0.00001),
      'worker_url' => pow_captcha_get_worker_url(),
      'server_url' => POW_CAPTCHA_URL,
    )
  ), 'setting');
}

function pow_captcha_add_css() {
}
